{"version":3,"file":"static/js/753.61435d31.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/components/ContactList/ContactItem/contact-item.module.css?5b0b","components/ContactList/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/contact-list.module.css?7001","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/contact-form.module.css?61ba","components/ContactForm/ContactForm.jsx","components/PhoneBook/PhoneBook.jsx","pages/PhoneBookPage/PhoneBookPage.jsx"],"sourcesContent":["export const getAllContacts = store => store.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return result;\n};\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contact-item_item__blZrl\",\"btn\":\"contact-item_btn__oa1nW\"};","import PropTypes from 'prop-types';\nimport css from './contact-item.module.css';\n\nconst ContactItem = ({ id, name, number, removeContact }) => {\n  return (\n    <li className={css.item}>\n      {name} : {number}\n      <button\n        onClick={() => removeContact(id)}\n        type=\"button\"\n        className={css.btn}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  removeContact: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contact-list_list__6PpQb\"};","import PropTypes from 'prop-types';\nimport ContactItem from './ContactItem/ContactItem';\nimport css from './contact-list.module.css';\n\nconst ContactList = ({ removeContact, contacts }) => {\n  const items = contacts.map(({ id, name, number }) => (\n    <ContactItem\n      key={id}\n      id={id}\n      name={name}\n      number={number}\n      removeContact={removeContact}\n    />\n  ));\n\n  return <ul className={css.list}>{items}</ul>;\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  removeContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"filter_input__sX944\"};","import PropTypes from 'prop-types';\n\nimport css from './filter.module.css';\n\nconst Filter = ({ handleChange }) => {\n  return (\n    <label className={css.input}>\n      Find contacts by name\n      <input\n        name=\"filter\"\n        onChange={handleChange}\n        placeholder=\"enter contact\"\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contact-form_wrapper__yA2N+\",\"title\":\"contact-form_title__RHwsL\",\"form\":\"contact-form_form__jmel0\",\"formGroup\":\"contact-form_formGroup__5zkqg\",\"formInput\":\"contact-form_formInput__wScdP\",\"formBtn\":\"contact-form_formBtn__3b8cg\",\"message\":\"contact-form_message__TMMa8\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from './contact-form.module.css';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formGroup}>\n        Name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.formGroup}>\n        Number\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          placeholder=\"number\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        ></input>\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchAllContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from '../../redux/contacts/contacts-operations';\nimport { setFilter } from '../../redux/filter/filter-slice';\n\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selectors';\n\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport ContactForm from '../ContactForm/ContactForm';\n\nimport css from '../ContactForm/contact-form.module.css';\n\nconst PhoneBook = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleAddContact = ({ name, number }) => {\n    dispatch(fetchAddContact({ name, number }));\n  };\n\n  const handleRemoveContact = id => {\n    dispatch(fetchDeleteContact(id));\n  };\n\n  const handleFilter = ({ target }) => dispatch(setFilter(target.value));\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <>\n      <div className={css.wrapper}>\n        <h2 className={css.title}>Phonebook</h2>\n        <ContactForm onSubmit={handleAddContact} />\n      </div>\n      <div className={css.wrapper}>\n        <h2 className={css.title}>Contacts</h2>\n        <Filter value={filter} handleChange={handleFilter} />\n        {isContacts && (\n          <ContactList\n            removeContact={handleRemoveContact}\n            contacts={filteredContacts}\n          />\n        )}\n        {!isContacts && <p className={css.message}>No contacts in list</p>}\n      </div>\n    </>\n  );\n};\n\nexport default PhoneBook;\n","import PhoneBook from 'components/PhoneBook/PhoneBook';\n\nconst PhoneBookPage = () => {\n  return <PhoneBook />;\n};\n\nexport default PhoneBookPage;\n"],"names":["getFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","name","includes","getFilter","id","number","removeContact","className","css","onClick","type","ContactList","map","defaultProps","handleChange","onChange","placeholder","initialState","onSubmit","useState","state","setState","e","target","value","prevState","preventDefault","pattern","title","required","filteredContacts","useSelector","dispatch","useDispatch","useEffect","fetchAllContacts","isContacts","Boolean","length","fetchAddContact","setFilter","fetchDeleteContact"],"sourceRoot":""}